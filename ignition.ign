{
  "ignition": {
    "version": "3.0.0"
  },
  "passwd": {
    "users": [
      {
        "groups": [
          "sudo",
          "docker"
        ],
        "name": "core",
        "sshAuthorizedKeys": [
          "ssh-rsa \u003cYOUR SSH public key file\u003e"
        ]
      }
    ]
  },
  "storage": {
    "files": [
      {
        "overwrite": true,
        "path": "/etc/NetworkManager/system-connections/enp3s0.nmconnection",
        "contents": {
          "source": "data:,%5Bconnection%5D%0Atype%3Dethernet%0Ainterface-name%3D%3CYour%20Interface%20Name%3E%0A%0A%5Bethernet%5D%0Amac-address%3D%3CYour%20Inerface%20Mac%20Address%3E%0A%0A%5Bipv4%5D%0Amethod%3Dmanual%0Aaddresses%3D%3CStatic%20IP%3E%0Agateway%3D%3CGateway%3E%0Adns%3D%3CDNS%3E%0A"
        },
        "mode": 384
      },
      {
        "overwrite": true,
        "path": "/etc/hostname",
        "contents": {
          "source": "data:,%3CYOUR%20HOST%20NAME%3E"
        },
        "mode": 420
      },
      {
        "path": "/var/home/core/init/selinux-disable.sh",
        "contents": {
          "source": "data:,%23!%2Fbin%2Fbash%0A%0Asetenforce%200%0Ased%20-i%20's%2F%5ESELINUX%3Denforcing%24%2FSELINUX%3Dpermissive%2F'%20%2Fetc%2Fselinux%2Fconfig%0A"
        },
        "mode": 493
      },
      {
        "path": "/var/home/core/init/cni-plugins-v0.8.5.tgz",
        "contents": {
          "source": "https://github.com/containernetworking/plugins/releases/download/v0.8.5/cni-plugins-linux-arm64-v0.8.5.tgz"
        },
        "mode": 493
      },
      {
        "path": "/var/home/core/init/cni-install.sh",
        "contents": {
          "source": "data:,%23!%2Fbin%2Fbash%0A%0A%23%20Unzip%20the%20kubernetes%20binaries%20if%20not%20already%20exists%0Atest%20-d%20%2Fvar%2Fhome%2Fcore%2Fcni%2Fbin%20%26%26%20echo%20%22CNI%20binaries%20already%20installed%22%20%26%26%20exit%200%0A%0ACNI_VERSION%3D%22v0.8.5%22%0Aecho%20-e%20%22%3D%3E%20Installing%20CNI%20%24%7BCNI_VERSION%7D%20binaries%20to%20%2Fvar%2Fhome%2Fcore%2Fcni%2Fbin%22%0Acd%20%2Fvar%2Fhome%2Fcore%2Finit%0Amkdir%20-p%20%2Fvar%2Fhome%2Fcore%2Fcni%2Fbin%0Atar%20-C%20%2Fvar%2Fhome%2Fcore%2Fcni%2Fbin%20-xvf%20cni-plugins-%24%7BCNI_VERSION%7D.tgz%0A"
        },
        "mode": 493
      },
      {
        "path": "/var/home/core/init/crictl-v1.17.0.tar.gz",
        "contents": {
          "source": "https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.17.0/crictl-v1.17.0-linux-amd64.tar.gz"
        },
        "mode": 493
      },
      {
        "path": "/var/home/core/init/crictl-install.sh",
        "contents": {
          "source": "data:,%23!%2Fbin%2Fbash%0A%0A%23%20Unzip%20the%20crictl%20if%20not%20already%20exists%0Atest%20-d%20%2Fvar%2Fhome%2Fcore%2Fbin%20%26%26%20echo%20%22CRICTL%20already%20installed%22%20%26%26%20exit%200%0A%0ACRICTL_VERSION%3D%22v1.17.0%22%0Aecho%20-e%20%22%3D%3E%20Installing%20CRICTL%20%24%7BCRICTL_VERSION%7D%20to%20%2Fvar%2Fhome%2Fcore%2Fbin%22%0Acd%20%2Fvar%2Fhome%2Fcore%2Finit%0Amkdir%20-p%20%2Fvar%2Fhome%2Fcore%2Fbin%0Atar%20-C%20%2Fvar%2Fhome%2Fcore%2Fbin%20-xvf%20crictl-%24%7BCRICTL_VERSION%7D.tgz%0A"
        },
        "mode": 493
      },
      {
        "path": "/var/home/core/bin/kubeadm",
        "contents": {
          "source": "https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubeadm"
        },
        "mode": 493
      },
      {
        "path": "/var/home/core/bin/kubelet",
        "contents": {
          "source": "https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubelet"
        },
        "mode": 493
      },
      {
        "path": "/var/home/core/bin/kubectl",
        "contents": {
          "source": "https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl"
        },
        "mode": 493
      },
      {
        "path": "/etc/systemd/system/kubelet.service",
        "contents": {
          "source": "https://raw.githubusercontent.com/kubernetes/kubernetes/v1.17.4/build/debs/kubelet.service"
        },
        "mode": 493
      },
      {
        "path": "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf",
        "contents": {
          "source": "https://raw.githubusercontent.com/kubernetes/kubernetes/v1.17.4/build/debs/10-kubeadm.conf"
        },
        "mode": 493
      },
      {
        "path": "/var/home/core/init/k8s-install.sh",
        "contents": {
          "source": "data:,%23!%2Fbin%2Fbash%0A%0A%23%20Exit%200%20if%20already%20present%20kubernetes%20binary%0Atest%20-d%20%2Fusr%2Flocal%2Fbin%2Fkubeadm%20%26%26%20echo%20%22k8s%20binaries%20(kubeadm)%20already%20installed%22%20%26%26%20exit%200%0A%23%20NOTE%3A%20If%20RELEASE%20is%20updated%2C%20the%20SHA512%20SUMs%20will%20need%20to%20be%20as%20well%0Aecho%20-e%20%22%3D%3E%20Installing%20k8s%20v1.17.0%22%0Aecho%20%22%3D%3E%20Cusomizing%20kubelet.service...%22%0Ased%20-i%20%22s%3A%2Fusr%2Fbin%3A%2Fvar%2Fhome%2Fcore%2Fbin%3Ag%22%20%2Fetc%2Fsystemd%2Fsystem%2Fkubelet.service%0Ased%20-i%20%22s%3A%2Fusr%2Fbin%3A%2Fvar%2Fhome%2Fcore%2Fbin%3Ag%22%20%2Fetc%2Fsystemd%2Fsystem%2Fkubelet.service.d%2F10-kubeadm.conf%0Aecho%20%22%3D%3E%20enable%20kubelet...%22%0Asystemctl%20daemon-reload%0Asystemctl%20enable%20kubelet%0Asystemctl%20start%20kubelet%0A"
        },
        "mode": 493
      },
      {
        "overwrite": true,
        "path": "/var/home/core/init/kubeadm-custom.yaml",
        "contents": {
          "source": "data:,apiVersion%3A%20kubeadm.k8s.io%2Fv1beta2%0Akind%3A%20InitConfiguration%0AnodeRegistration%3A%0A%20%20kubeletExtraArgs%3A%0A%20%20%20%20volume-plugin-dir%3A%20%22%2Fvar%2Fhome%2Fcore%2Flibexec%2Fkubernetes%2Fkubelet-plugins%2Fvolume%2Fexec%2F%22%0A---%0AapiVersion%3A%20kubeadm.k8s.io%2Fv1beta2%0Akind%3A%20ClusterConfiguration%0AcontrollerManager%3A%0A%20%20extraArgs%3A%0A%20%20%20%20flex-volume-plugin-dir%3A%20%22%2Fvar%2Fhome%2Fcore%2Flibexec%2Fkubernetes%2Fkubelet-plugins%2Fvolume%2Fexec%2F%22%0Anetworking%3A%0A%20%20podSubnet%3A%2010.244.0.0%2F16%0A"
        },
        "mode": 493
      },
      {
        "path": "/var/home/core/init/kubeadm-install.sh",
        "contents": {
          "source": "data:,%23!%2Fbin%2Fbash%0A%23%20Ensure%20kubeadm%20binary%20is%20present%0Atest%20-f%20%2Fvar%2Fhome%2Fcore%2Fbin%2Fkubeadm%20%7C%7C%20(echo%20%22Failed%20to%20find%20kubeadm%20binary%22%20%26%26%20exit%201)%0A%23%20Exit%20if%20kubeadm%20has%20already%20been%20run%20(%2Fetc%2Fkubernetes%20folder%20would%20have%20been%20created)%0Atest%20-d%20%2Fetc%2Fkubernetes%20%26%26%20echo%20%22%2Fetc%2Fkubernetes%20is%20present%2C%20kubeadm%20should%20have%20already%20been%20run%20once%22%20%26%26%20exit%200%0A%0Aecho%20%22%3D%3E%20install%20ethtool%20conntrack%22%0Arpm-ostree%20install%20ethtool%20conntrack%20-r%0A%0Aecho%20%22%3D%3E%20Running%20kubeadm%20init...%22%0A%2Fvar%2Fhome%2Fcore%2Fbin%2Fkubeadm%20init%20--config%20%2Fvar%2Fhome%2Fcore%2Finit%2Fkubeadm-custom.yaml%0A%0Aecho%20%22%3D%3E%20Running%20kubeadm%20post-install%20set%20up%20for%20user%20'core'%22%0Amkdir%20-p%20%2Fhome%2Fcore%2F.kube%0Acp%20-i%20%2Fetc%2Fkubernetes%2Fadmin.conf%20%2Fhome%2Fcore%2F.kube%2Fconfig%0Achown%20%24(id%20-u%20core)%3A%24(id%20-g%20core)%20%2Fhome%2Fcore%2F.kube%2Fconfig%0A%0A%23%20use%20c-node%20on%20scheduling%0Aecho%20%22%3D%3E%20Enabling%20workload%20running%20on%20the%20master%20node%22%0Akubectl%20taint%20nodes%20--all%20node-role.kubernetes.io%2Fmaster-%0A%0A%23%20flannel%20deploy%0Aecho%20%22%3D%3E%20Installing%20Flannel%22%0Akubectl%20apply%20-f%20https%3A%2F%2Fraw.githubusercontent.com%2Fcoreos%2Fflannel%2Fmaster%2FDocumentation%2Fkube-flannel.yml%0A"
        },
        "mode": 493
      },
      {
        "path": "/var/home/core/init/metallb-configmap.yaml",
        "contents": {
          "source": "data:,apiVersion%3A%20v1%0Akind%3A%20ConfigMap%0Ametadata%3A%0A%20%20namespace%3A%20metallb-system%0A%20%20name%3A%20config%0Adata%3A%0A%20%20config%3A%20%7C%0A%20%20%20%20address-pools%3A%0A%20%20%20%20-%20name%3A%20default%0A%20%20%20%20%20%20protocol%3A%20layer2%0A%20%20%20%20%20%20addresses%3A%0A%20%20%20%20%20%20-%20192.168.1.210-192.168.1.220%0A"
        }
      },
      {
        "path": "/var/home/core/init/metallb-install.sh",
        "contents": {
          "source": "data:,%23!%2Fbin%2Fbash%0A%0A%23%20Exit%20if%20kubeadm%20has%20already%20been%20run%20(%2Fetc%2Fkubernetes%20folder%20would%20have%20been%20created)%0Atest%20-d%20%2Fvar%2Fhome%2Fcore%2Finit%2Fmetallb-configmap.yaml.lock%20%26%26%20echo%20%22MetalLB%20deployed%22%20%26%26%20exit%200%0A%0Akubectl%20apply%20-f%20https%3A%2F%2Fraw.githubusercontent.com%2Fmetallb%2Fmetallb%2Fv0.9.4%2Fmanifests%2Fnamespace.yaml%0Akubectl%20apply%20-f%20https%3A%2F%2Fraw.githubusercontent.com%2Fmetallb%2Fmetallb%2Fv0.9.4%2Fmanifests%2Fmetallb.yaml%0Akubectl%20create%20secret%20generic%20-n%20metallb-system%20memberlist%20--from-literal%3Dsecretkey%3D%22%24(openssl%20rand%20-base64%20128)%22%0Akubectl%20apply%20-f%20%2Fvar%2Fhome%2Fcore%2Finit%2Fmetallb-configmap.yaml%0Acp%20%2Fvar%2Fhome%2Fcore%2Finit%2Fmetallb-configmap.yaml%20%2Fvar%2Fhome%2Fcore%2Finit%2Fmetallb-configmap.yaml.lock%0A"
        }
      },
      {
        "overwrite": true,
        "path": "/etc/systemd/system/docker.service.d/docker.conf",
        "contents": {
          "source": "data:,%5BService%5D%0AExecStart%3D%0AExecStart%3D%2Fusr%2Fbin%2Fdockerd%20--exec-opt%20native.cgroupdriver%3Dsystemd%20--log-driver%3Djson-file%20--log-opt%20max-size%3D100m%0A"
        },
        "mode": 493
      },
      {
        "overwrite": true,
        "path": "/etc/sysctl.d/k8s.conf",
        "contents": {
          "source": "data:,net.bridge.bridge-nf-call-iptables%20%20%3D%201%0Anet.ipv4.ip_forward%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%3D%201%0Anet.bridge.bridge-nf-call-ip6tables%20%3D%201%0A"
        },
        "mode": 493
      }
    ]
  },
  "systemd": {
    "units": [
      {
        "enabled": true,
        "name": "docker.service"
      },
      {
        "contents": "[Install]\nWantedBy=multi-user.target\n[Unit]\nDescription=selinux disable script\nWants=network-online.target\nAfter=network.target network-online.target\n[Service]\nType=oneshot\nExecStartPre=setenforce 0\nExecStart=/var/home/core/init/selinux-disable.sh\n",
        "enabled": true,
        "name": "selinux-disable.service"
      },
      {
        "contents": "[Install]\nWantedBy=multi-user.target\n[Unit]\nDescription=nftables-disable script\nRequires=selinux-disable.target\nAfter=selinux-disable.target\n[Service]\nType=oneshot\nExecStartPre=setenforce 0\nExecStart=/bin/bash /usr/sbin/update-alternatives --set iptables /usr/sbin/iptables-legacy\n",
        "enabled": true,
        "name": "nftables-disable.service"
      },
      {
        "contents": "[Install]\nWantedBy=multi-user.target\n[Unit]\nDescription=cni plugin installation script\nRequires=nftables-disable.target\nAfter=nftables-disable.target\n[Service]\nType=oneshot\nExecStart=/var/home/core/init/cni-install.sh\n",
        "enabled": true,
        "name": "cni-install.service"
      },
      {
        "contents": "[Install]\nWantedBy=multi-user.target\n[Unit]\nDescription=crictl installation script\nRequires=cni-install.service\nAfter=cni-install.service\n[Service]\nType=oneshot\nExecStart=/var/home/core/init/crictl-install.sh\n",
        "enabled": true,
        "name": "crictl-install.service"
      },
      {
        "contents": "[Install]\nWantedBy=multi-user.target\n[Unit]\nDescription=k8s installation script\nRequires=crictl-install.service\nAfter=crictl-install.service\n[Service]\nType=oneshot\nExecStartPre=setenforce 0\nExecStart=/var/home/core/init/k8s-install.sh\n",
        "enabled": true,
        "name": "k8s-install.service"
      },
      {
        "contents": "[Install]\nWantedBy=multi-user.target\n[Unit]\nDescription=kubeadm installation script\nRequires=k8s-install.service\nAfter=k8s-install.service\n[Service]\nType=oneshot\nEnvironment=\"PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/var/home/core/bin\"\nExecStartPre=setenforce 0\nExecStart=/var/home/core/init/kubeadm-install.sh\n",
        "enabled": true,
        "name": "kubeadm-install.service"
      }
    ]
  }
}
